/*
 * CONTROL DE CAMBIOS EN AMBIENTES
 * LOCAL:      OK (FECHA DE APLICACIÓN)
 * PRUEBAS:    PENDIENTE (FECHA DE APLICACIÓN)
 * PRODUCCIÓN: PENDIENTE (FECHA DE APLICACIÓN)
*/

/* *************************************************** *
 * ********** CREACIÓN DE TABLA DE CONCEPTOS ********* *
 * *************************************************** */

DROP TABLE IF EXISTS CAT_CONCEPTO;
CREATE TABLE CAT_CONCEPTO
(
    PK_CONCEPTO             INT             NOT NULL IDENTITY(1,1),
    FK_AREA_ACADEMICA       INT             NOT NULL,

    NOMBRE                  NVARCHAR(100)   NOT NULL,
    DESCRIPCION             NVARCHAR(300)   NOT NULL,
    MONTO                   DECIMAL         NOT NULL,
    VIGENCIA_INICIAL        DATE            NOT NULL,
    VIGENCIA_FINAL          DATE            NOT NULL,
    ES_MONTO_VARIABLE       BIT             NOT NULL DEFAULT 0, -- 0 -> NO VARIABLE, 1 -> VARIABLE
    ES_CANTIDAD_VARIABLE    BIT             NOT NULL DEFAULT 0, -- 0 -> NO VARIABLE, 1 -> VARIABLE
    CLAVE_CONTPAQ           NVARCHAR(5)     NOT NULL,

    FK_USUARIO_REGISTRO     INT,
    FECHA_REGISTRO          DATETIME        NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FK_USUARIO_MODIFICACION INT,
    FECHA_MODIFICACION      DATETIME,
    BORRADO                 SMALLINT        NOT NULL DEFAULT 0
);

ALTER TABLE CAT_CONCEPTO
    ADD CONSTRAINT PRK_CONCEPTO_CAT_CONCEPTO PRIMARY KEY (PK_CONCEPTO ASC);

ALTER TABLE CAT_CONCEPTO
    ADD CONSTRAINT FRK_AREA_ACADEMICA_CAT_CONCEPTO FOREIGN KEY (FK_AREA_ACADEMICA) REFERENCES CAT_AREA_ACADEMICA (PK_AREA_ACADEMICA);
/* FIN TABLA CONCEPTOS */

/* **************************************************** *
 * ********** CREACIÓN DE TABLA DE REFERENCIAS ******** *
 * **************************************************** */

DROP TABLE IF EXISTS TR_REFERENCIA;
CREATE TABLE TR_REFERENCIA
(
    PK_REFERENCIA           INT             NOT NULL IDENTITY (1,1),
    FK_USUARIO              INT             NOT NULL,
    FK_CONCEPTO             INT             NOT NULL,

    FECHA_GENERADA          DATETIME        DEFAULT NULL,
    FECHA_EXPIRACION        DATETIME        DEFAULT NULL,
    ESTATUS_REFERENCIA      TINYINT         NOT NULL,                   --0 -> NO PAGADA GENERADA, 1 -> PAGADA GENERADA, 2 -> PAGADA GENERADA EXTERNA
    MONTO                   DECIMAL         NOT NULL,                   --MONTO TOTAL A PAGAR
    CANTIDAD_SISTEMA        TINYINT         NOT NULL,                   --ESTA COLUMNA FUE BORRADA
    NUMERO_REF_BANCO        NVARCHAR(25)    NOT NULL,
    FECHA_PAGO              DATETIME        DEFAULT NULL,
    TIPO_PAGO               NVARCHAR(10)    DEFAULT NULL,               --TARJETA, EFECTIVO
    CANTIDAD_SOLICITADA     SMALLINT        NOT NULL,

    FK_USUARIO_REGISTRO     INT,
    FECHA_REGISTRO          DATETIME        NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FK_USUARIO_MODIFICACION INT,
    FECHA_MODIFICACION      DATETIME,
    BORRADO                 SMALLINT        NOT NULL DEFAULT 0
);

ALTER TABLE TR_REFERENCIA
    ADD CONSTRAINT PRK_REFERENCIA_TR_REFERENCIA PRIMARY KEY (PK_REFERENCIA ASC);

ALTER TABLE TR_REFERENCIA
    ADD CONSTRAINT FRK_USUARIO_TR_REFERENCIA FOREIGN KEY (FK_USUARIO) REFERENCES CAT_USUARIO (PK_USUARIO);

ALTER TABLE TR_REFERENCIA
    ADD CONSTRAINT FRK_CONCEPTO_TR_REFERENCIA FOREIGN KEY (FK_CONCEPTO) REFERENCES CAT_CONCEPTO (PK_CONCEPTO);
/* FIN TABLA REFERENCIAS */

/* ********************************************************************** *
 * ********** CREACIÓN DE TABLA DE DOCUMENTOS DE LAS REFERENCIAS ******** *
 * ********************************************************************** */

DROP TABLE IF EXISTS TR_REFERENCIA_DOCUMENTO;
CREATE TABLE TR_REFERENCIA_DOCUMENTO
(
    PK_DOCUMENTO                INT             NOT NULL IDENTITY (1,1),
    FK_REFERENCIA               INT             NOT NULL,

    ESTATUS_ENTREGA_DOCUMENTO   TINYINT         NOT NULL,   --0 PAGADO, 1 GENERADO, 2 ENTREGADO
    FECHA_ENTREGA               DATE            NOT NULL,
    OBSERVACIONES               TEXT            DEFAULT NULL,

    FK_USUARIO_REGISTRO         INT,
    FECHA_REGISTRO              DATETIME        NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FK_USUARIO_MODIFICACION     INT,
    FECHA_MODIFICACION          DATETIME,
    BORRADO                     SMALLINT        NOT NULL DEFAULT 0
);

ALTER TABLE TR_REFERENCIA_DOCUMENTO
    ADD CONSTRAINT PRK_DOCUMENTO_TR_REFERENCIA_DOCUMENTO PRIMARY KEY (PK_DOCUMENTO ASC);

ALTER TABLE TR_REFERENCIA_DOCUMENTO
    ADD CONSTRAINT FRK_REFERENCIA_TR_REFERENCIA_DOCUMENTO FOREIGN KEY (FK_REFERENCIA) REFERENCES TR_REFERENCIA (PK_REFERENCIA);
/* FIN TABLA DOCUMENTOS DE REFERENCIAS */

/* ***************************************************** *
 * ********** CREACIÓN DE BITÁCORA DE CONCEPTOS ******** *
 * ***************************************************** */

DROP TABLE IF EXISTS LOG_CONCEPTO;
CREATE TABLE LOG_CONCEPTO
(
    PK_LOG_CONCEPTO         INT             NOT NULL IDENTITY(1,1),
    FK_CONCEPTO             INT             NOT NULL,

    MONTO_ANTERIOR          DECIMAL         NOT NULL,
    MONTO_NUEVO             DECIMAL         NOT NULL,

    FK_USUARIO_REGISTRO     INT,
    FECHA_REGISTRO          DATETIME        NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FK_USUARIO_MODIFICACION INT,
    FECHA_MODIFICACION      DATETIME,
    BORRADO                 SMALLINT        NOT NULL DEFAULT 0
);

ALTER TABLE LOG_CONCEPTO
    ADD CONSTRAINT PRK_LOG_CONCEPTO_LOG_CONCEPTO PRIMARY KEY (PK_LOG_CONCEPTO ASC);

ALTER TABLE LOG_CONCEPTO
    ADD CONSTRAINT FRK_CONCEPTO_LOG_CONCEPTO FOREIGN KEY (FK_CONCEPTO) REFERENCES CAT_CONCEPTO (PK_CONCEPTO);
/* FIN BITÁCORA CONCEPTOS */

/* ************************************************ *
 * ********** CREACIÓN DE TABLA DE NIVELES ******** *
 * ************************************************ */

DROP TABLE IF EXISTS  CAT_NIVEL;
CREATE TABLE CAT_NIVEL
(
    PK_NIVEL                INT           NOT NULL IDENTITY(1,1),

    NIVEL                   TINYINT       NOT NULL,                 --DEL 0 AL 4
    NOMBRE                  NVARCHAR(15)  NOT NULL,                 --0 -> EXTERNO, 1 -> LICENCIATURA, 2 -> MAESTRIA, 3 -> DOCTORADO, 4 -> EGRESADO

    FK_USUARIO_REGISTRO     INT,
    FECHA_REGISTRO          DATETIME      NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FK_USUARIO_MODIFICACION INT,
    FECHA_MODIFICACION      DATETIME,
    BORRADO                 SMALLINT      NOT NULL DEFAULT 0
);

ALTER TABLE CAT_NIVEL
    ADD CONSTRAINT PRK_NIVEL_CAT_NIVEL PRIMARY KEY (PK_NIVEL ASC);
/* FIN TABLA NIVELES */

/* ************************************************************ *
 * ********** CREACIÓN DE TABLA DE CONCEPTOS POR NIVEL ******** *
 * ************************************************************ */

DROP TABLE IF EXISTS TR_CONCEPTO_NIVEL;
CREATE TABLE TR_CONCEPTO_NIVEL
(
    PK_CONCEPTO_NIVEL       INT             NOT NULL IDENTITY(1,1),
    FK_CONCEPTO             INT             NOT NULL,
    FK_NIVEL                INT             NOT NULL,

    SEMESTRE                TINYINT         DEFAULT NULL,                       --CUANDO ES NULL, PARA TODOS LOS SEMESTRES

    FK_USUARIO_REGISTRO     INT,
    FECHA_REGISTRO          DATETIME        NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FK_USUARIO_MODIFICACION INT,
    FECHA_MODIFICACION      DATETIME,
    BORRADO                 SMALLINT        NOT NULL DEFAULT 0
);

ALTER TABLE TR_CONCEPTO_NIVEL
    ADD CONSTRAINT PRK_CONCEPTO_NIVEL_TR_CONCEPTO_NIVEL PRIMARY KEY (PK_CONCEPTO_NIVEL ASC);

ALTER TABLE TR_CONCEPTO_NIVEL
    ADD CONSTRAINT FRK_CONCEPTO_TR_CONCEPTO_NIVEL FOREIGN KEY (FK_CONCEPTO) REFERENCES CAT_CONCEPTO (PK_CONCEPTO);

ALTER TABLE TR_CONCEPTO_NIVEL
    ADD CONSTRAINT FRK_NIVEL_TR_CONCEPTO_NIVEL FOREIGN KEY (FK_NIVEL) REFERENCES CAT_NIVEL (PK_NIVEL);
/* FIN TABLA CONCEPTOS POR NIVEL */

/* ********************************************** *
 * ********** CREACIÓN DE TABLA DE VALES ******** *
 * ********************************************** */

DROP TABLE IF EXISTS CAT_VALE;
CREATE TABLE CAT_VALE
(
    PK_VALE                 INT             NOT NULL IDENTITY(1,1),

    NOMBRE                  NVARCHAR(100)   NOT NULL,
    ESTATUS                 BIT             NOT NULL,
    MONTO                   DECIMAL         NOT NULL,

    FK_USUARIO_REGISTRO     INT,
    FECHA_REGISTRO          DATETIME        NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FK_USUARIO_MODIFICACION INT,
    FECHA_MODIFICACION      DATETIME,
    BORRADO                 SMALLINT        NOT NULL DEFAULT 0
);

ALTER TABLE CAT_VALE
    ADD CONSTRAINT PRK_VALE_CAT_VALE PRIMARY KEY (PK_VALE ASC);
/* FIN TABLA VALES */

/* ********************************************************** *
 * ********** CREACIÓN DE TABLA DE VALES POR USUARIO ******** *
 * ********************************************************** */

DROP TABLE IF EXISTS TR_VALE_USUARIO;
CREATE TABLE TR_VALE_USUARIO
(
    PK_VALE_USUARIO         INT             NOT NULL IDENTITY(1,1),
    FK_VALE                 INT             NOT NULL,
    FK_USUARIO              INT             NOT NULL,

    CANTIDAD                SMALLINT        NOT NULL,

    FK_USUARIO_REGISTRO     INT,
    FECHA_REGISTRO          DATETIME        NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FK_USUARIO_MODIFICACION INT,
    FECHA_MODIFICACION      DATETIME,
    BORRADO                 SMALLINT        NOT NULL DEFAULT 0
);

ALTER TABLE TR_VALE_USUARIO
    ADD CONSTRAINT PRK_VALE_USUARIO_TR_VALE_USUARIO PRIMARY KEY (PK_VALE_USUARIO ASC);

ALTER TABLE TR_VALE_USUARIO
    ADD CONSTRAINT FRK_VALE_TR_VALE_USUARIO FOREIGN KEY (FK_VALE) REFERENCES CAT_VALE (PK_VALE);

ALTER TABLE TR_VALE_USUARIO
    ADD CONSTRAINT FRK_USUARIO_TR_VALE_USUARIO FOREIGN KEY (FK_USUARIO) REFERENCES CAT_USUARIO (PK_USUARIO);
/* FIN TABLA VALES POR USUARIO */

/* ************************************************************ *
 * ********** CREACIÓN DE TABLA DE MOVIMIENTO DE VALES ******** *
 * ************************************************************ */

DROP TABLE IF EXISTS TR_MOVIMIENTO_VALE;
CREATE TABLE TR_MOVIMIENTO_VALE
(
    PK_MOVIMIENTO           INT             NOT NULL IDENTITY(1,1),
    FK_VALE_USUARIO         INT             NOT NULL,
    FK_REFERENCIA           INT                      DEFAULT NULL,

    MONTO                   DECIMAL         NOT NULL,
    TIPO_MOVIMIENTO         BIT             NOT NULL,                           -- 0 -> CARGO, 1 -> ABONO
    FECHA_MOVIMIENTO        DATE            NOT NULL,
    CANTIDAD                SMALLINT        NOT NULL,
    OBSERVACIONES           TEXT            DEFAULT NULL,

    FK_USUARIO_REGISTRO     INT,
    FECHA_REGISTRO          DATETIME        NOT NULL DEFAULT CURRENT_TIMESTAMP,
    FK_USUARIO_MODIFICACION INT,
    FECHA_MODIFICACION      DATETIME,
    BORRADO                 SMALLINT        NOT NULL DEFAULT 0
);

ALTER TABLE TR_MOVIMIENTO_VALE
    ADD CONSTRAINT PRK_MOVIMIENTO_TR_MOVIMIENTO_VALE PRIMARY KEY (PK_MOVIMIENTO ASC);

ALTER TABLE TR_MOVIMIENTO_VALE
    ADD CONSTRAINT FRK_VALE_USUARIO_TR_MOVIMIENTO_VALE FOREIGN KEY (FK_VALE_USUARIO) REFERENCES TR_VALE_USUARIO (PK_VALE_USUARIO);

ALTER TABLE TR_MOVIMIENTO_VALE
    ADD CONSTRAINT FRK_REFERENCIA_TR_MOVIMIENTO_VALE FOREIGN KEY (FK_REFERENCIA) REFERENCES TR_REFERENCIA (PK_REFERENCIA);
/* FIN TABLA MOVIMIENTO DE VALES */

-- --------------------------------------------------------------------------------------------------------------------------------
-- --------------------------------------------------------------------------------------------------------------------------------
-- --------------------------------------------------------------------------------------------------------------------------------
